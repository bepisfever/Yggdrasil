[manifest]
version = "1.0.0"
dump_lua = true
priority = -100000000

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''if (self == G.hand or self == G.deck or self == G.discard or self == G.play) and G.view_deck and G.view_deck[1] and G.view_deck[1].cards then return end'''
position = "after"
payload = '''self.cards = self.cards or {}'''
match_indent = true

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = '''if self.children.view_deck then'''
position = "before"
payload = '''if not self.children or not self.children.view_deck then return end'''
match_indent = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
match_indent = true
position = 'at'
pattern = '''
function SMODS.calculate_card_areas(_type, context, return_table, args)
    local flags = {}
    if _type == 'jokers' then
        for _, area in ipairs(SMODS.get_card_areas('jokers')) do
            if args and args.joker_area and not args.has_area then context.cardarea = area end
            for _, _card in ipairs(area.cards) do
'''
payload = '''
function SMODS.calculate_card_areas(_type, context, return_table, args)
    local flags = {}
    if _type == 'jokers' then
        for _, area in ipairs(SMODS.get_card_areas('jokers')) do
            if args and args.joker_area and not args.has_area then context.cardarea = area end
            for _, _card in ipairs(area.cards or {}) do
'''
